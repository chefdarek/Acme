# -*- coding: utf-8 -*-
"""Acme_report.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jNIScBi4JlsGBtxg9BZc1qSoszYkGtRd
"""

#!/usr/bin/env python

from random import randint, sample, uniform
from acme import Product
import numpy

# Useful to use with random.sample to generate names
ADJECTIVES = ['Awesome', 'Shiny', 'Impressive', 'Portable', 'Improved']

NOUNS = [
    'Anvil', 
    'Catapult',
    'Disguise',
    'Mousetrap',
    'Doorknob',
    'Window',
]


def generate_products(num_products=30):
  
  """generates a list of random products
  param: number of products
  returns: list of products
  """
    products = []
    for i in range(1,31):
      
      i = Product(
          name=(random.sample(ADJECTIVES) + " " + random.sample(NOUNS),
          price= random.randint(5,101),
          weight = random.randint(5,101),
          flammability = random.uniform(0.0, 2.6)
      )
      
      product.append(i)
      
    return products


def inventory_report(products):
    """Prints inventory report of products for list
    generated by gen_products
    params: list
    returns: str names, avg price, avg weight, avg flammability
    """
    print("ACME CORPORATION OFFICIAL INVENTORY REPORT")
    
    print(f"Unique product names: " len(set(products))
    
    avgprices = []
    avgweight = []
    avgflame = []
          
    for product in products:
          
          avgprices.append(product.price)
          avgweight.append(product.weight)
          avgflame.append(product.flammability)
    
    print (f"Average Price:" np.mean(avgprices))
          
    print (f"Average Weight:" np.mean(avgweight))
          
    print (f"Average flammability:" np.mean(avgflame))


if __name__ == '__main__':
    inventory_report(generate_products())